/// <reference types="@rbxts/compiler-types" />
/// <reference types="@rbxts/types" />
import { ProjectileConfig } from "../Types/ProjectileConfig";
import { IRenderer } from "../Interfaces/IRenderer";
/**
 * A projectile that simulates physical interactions with the world according to the given configuration
 */
export declare class Projectile {
    /**
     * The total number of seconds that have elapsed
     */
    static elapsedTime: number;
    /**
     * The current projectiles being simulated
     */
    static projectiles: Projectile[];
    /**
     * The set of projectiles to be removed on the next step
     */
    static readonly removeList: Set<Projectile>;
    /**
     * The global physics ignore that applies to all Projectile instances
     */
    static readonly globalPhysicsIgnore: Instance[];
    /**
     * The point in `Projectile.elapsedTime` that this projectile will die, whether or not it has hit something
     */
    readonly lifeTime: number;
    /**
     * The renderer for the projectile
     */
    readonly renderer: IRenderer;
    private px;
    private py;
    private pz;
    private vx;
    private vy;
    private vz;
    private ax;
    private ay;
    private az;
    private distanceSq;
    private bounce;
    private canCollide;
    private maxRangeSq;
    private minExitVelocity;
    private penetration;
    private physicsIgnore;
    private resistance;
    private onTouch;
    constructor(config: ProjectileConfig);
    /**
     * Adds an object to the global physics ignore
     * @param object The object to add
     */
    static addToPhysicsIgnore(object: Instance): void;
    private static raycast;
    /**
     * DO NOT CALL THIS
     * Used to commit a step of physics and rendering
     */
    step(dt: number): void;
    /**
     * Removes the projectile
     * @param instantly Whether to remove the projectile instantly or to add it to the remove list for the following step
     */
    remove(instantly?: boolean): void;
}
