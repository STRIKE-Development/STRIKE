-- Compiled with roblox-ts v1.1.1
local Workspace = game:GetService("Workspace")
local DEFAULT_RADIUS = 0.05
local recyclables = {}
--[[
	*
	* A lightweight renderer that uses CylinderHandleAdornments to render the movement of projectiles frame by frame
	* Unless you _need_ a more specific renderer, this is highly encouraged!
]]
local CylinderRenderer
do
	CylinderRenderer = setmetatable({}, {
		__tostring = function()
			return "CylinderRenderer"
		end,
	})
	CylinderRenderer.__index = CylinderRenderer
	function CylinderRenderer.new(...)
		local self = setmetatable({}, CylinderRenderer)
		self:constructor(...)
		return self
	end
	function CylinderRenderer:constructor(color, radius)
		self.physicsIgnore = {}
		self.cylinderHandleAdornment = CylinderRenderer:createCylinderAdornment(color, radius)
	end
	function CylinderRenderer:createCylinderAdornment(color, radius)
		-- ▼ Array.pop ▼
		local _0 = #recyclables
		local _1 = recyclables[_0]
		recyclables[_0] = nil
		-- ▲ Array.pop ▲
		local _2 = _1
		if not _2 then
			_2 = Instance.new("CylinderHandleAdornment")
		end
		local line = _2
		line.Parent = Workspace.Terrain
		line.Adornee = Workspace.Terrain
		line.Color3 = color
		line.Radius = radius ~= nil and radius or DEFAULT_RADIUS
		return line
	end
	function CylinderRenderer:destroy()
		self.cylinderHandleAdornment.Adornee = nil
		local _0 = recyclables
		local _1 = self.cylinderHandleAdornment
		-- ▼ Array.push ▼
		_0[#_0 + 1] = _1
		-- ▲ Array.push ▲
	end
	function CylinderRenderer:render(position, directionUnit)
		if self.previousPosition ~= nil then
			local _0 = position
			local _1 = self.previousPosition
			local length = (_0 - _1).Magnitude
			self.cylinderHandleAdornment.Height = length
			local _2 = position
			local _3 = directionUnit
			local _4 = CFrame.new(position, _2 + _3)
			local _5 = CFrame.new(0, 0, -length / 2)
			self.cylinderHandleAdornment.CFrame = _4 * _5
		end
		self.previousPosition = position
	end
end
return {
	CylinderRenderer = CylinderRenderer,
}
