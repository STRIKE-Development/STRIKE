/// <reference types="@rbxts/compiler-types" />
/// <reference types="@rbxts/types" />
import { IRenderer } from "../../Interfaces/IRenderer";
/**
 * Renders a BasePart object as a projectile renderer
 */
export declare class PartRenderer implements IRenderer {
    physicsIgnore: ReadonlyArray<Instance>;
    private templatePart;
    private offsetCFrame;
    /**
     * Creates a new PartRenderer with a clone of the given `BasePart`
     * @param templatePart The base part to clone
     * @param offsetCFrame The offset CFrame to apply every frame - applied as following: `new CFrame(position, position.add(directionUnit)).mul(offsetCFrame)`
     */
    constructor(templatePart: BasePart, parent?: Instance, offsetCFrame?: CFrame);
    destroy(): void;
    render(position: Vector3, directionUnit: Vector3): void;
}
